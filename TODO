- What about Java enums and their values?

Upcoming features:
    - Fragment functions
    - new Object ()
    - Static function calls
    - Also check out the roadmap in the Wiki.
    - Some kind of syntax to quickly create Lists (e.g. [a, b, c]).

Ideas:
    - Replace System.out.println with a Logger?
    - Support <!DOCTYPE x> with a function (and possibly an enum).
    - Allow closures to receive a Closure input parameter. This requires that the parameter name for the closure
      can be specified when calling the closure.
    - (HTML) Block functions and if, while, each statements etc. could return their result as a String. For example
        h1: Hello
      would return "<h1>Hello</h1>" instead of writing it to the Writer directly. This would severely impact the
      performance, but we could optimize this and only return an actual String if the value is saved in a variable.
    - Allow explicitly annotating the "default" fragment of a template. The default default fragment would be render.

Absolutely needed improvements:
    - Better ANTLR and JIT error reporting (with an error list, instead of aborting the compilation instantly).

Tests:
    - Test the tab to indentation translation of the lexer.
    - Make benchmark test functions optional.
    - Write Boolean test (With boxing/unboxing).

API:
    - Make the API easier to use.
    - Allow the programmer to add specific interfaces to each individual template,
      which can then be used to call methods of the template directly instead of
      having to go through Unit.call and reflection. The compiler would also check
      whether the interface that is supplied is actually satisfied by the implementation
      of the currently compiled template.

Language Compatibility:
    - This is possible in Java, but not bryg:
        Object obj = 15