// Thanks to Matt Cholick for the awesome gist (https://gist.github.com/mcholick/7177513)!

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

archivesBaseName = 'bryg'
version = '0.2'
group = 'io.collap.bryg'

sourceCompatibility = 1.7

repositories {
    mavenCentral()
}

configurations {
    repackage
}

dependencies {
    compile 'junit:junit:4.11'
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    // compile 'org.antlr:antlr4:4.3'
    compile 'org.reflections:reflections:0.9.9-RC1'
    compile files ('lib/antlr-4.4.1-dev-complete.jar')
    compile files ('lib/asm-5.0.3.patched.jar')

    repackage 'org.ow2.asm:asm:5.0.3'
    repackage 'org.ow2.asm:asm-tree:5.0.3'
    repackage 'org.ow2.asm:asm-util:5.0.3'
    repackage 'com.googlecode.jarjar:jarjar:1.3'
}

project.ext.set ("shouldRepackage", { !new File ('lib/asm-5.0.3.patched.jar').exists () })

task downloadRepackage (type: Copy) {
    if (shouldRepackage ()) {
        into('repackage')
        from(configurations.repackage)
        exclude('jarjar*')
        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    }
}

task applyRepackage (dependsOn: 'downloadRepackage') << {
    if (shouldRepackage ()) {
        project.ant {
            taskdef name: "jarjar", classname: "com.tonicsystems.jarjar.JarJarTask", classpath: configurations.repackage.asPath
            jarjar(jarfile: 'lib/asm-5.0.3.patched.jar', filesetmanifest: "merge") {
                zipfileset(src: 'repackage/asm-5.0.3.jar')
                zipfileset(src: 'repackage/asm-tree-5.0.3.jar')
                zipfileset(src: 'repackage/asm-util-5.0.3.jar')
                rule pattern: "org.objectweb.asm.**", result: "bryg.org.objectweb.asm.@1"
            }
        }
    }
}

task cleanupRepackageLibs (type: Delete, dependsOn: 'applyRepackage') {
    delete 'repackage'
}
compileJava.dependsOn (cleanupRepackageLibs)

test {
    /* Multiple forks lead to multiple separate Environments to be created, so be
       careful how high you choose the number.
       In normal (non-benchmarking) cases, it does not need to be higher than 1. */
    setMaxParallelForks (1)
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'gen'
        }
    }
}

jar {
    destinationDir = file ("$rootDir")
    from files ('lib/antlr-4.4.1-dev-complete.jar', 'lib/asm-5.0.3.patched.jar').collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes 'Implementation-Title': archivesBaseName,
                   'Implementation-Version': version
    }
}